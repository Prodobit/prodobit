export declare const purchaseOrderStatusEnum: import("arktype/internal/methods/string.ts").StringType<"closed" | "draft" | "cancelled" | "approved" | "pending_approval" | "sent" | "acknowledged" | "partially_received" | "received", {}>;
export declare const purchaseOrderPriorityEnum: import("arktype/internal/methods/string.ts").StringType<"low" | "high" | "normal" | "urgent", {}>;
export declare const purchaseOrderTypeEnum: import("arktype/internal/methods/string.ts").StringType<"service" | "standard" | "blanket" | "contract" | "emergency", {}>;
export declare const purchaseLineItemStatusEnum: import("arktype/internal/methods/string.ts").StringType<"closed" | "cancelled" | "pending" | "acknowledged" | "partially_received" | "received" | "ordered", {}>;
export declare const purchaseRequisitionStatusEnum: import("arktype/internal/methods/string.ts").StringType<"closed" | "draft" | "cancelled" | "submitted" | "approved" | "rejected" | "pending_approval" | "ordered" | "partially_ordered", {}>;
export declare const purchaseRequisitionPriorityEnum: import("arktype/internal/methods/string.ts").StringType<"low" | "high" | "normal" | "urgent", {}>;
export declare const purchaseRequisitionTypeEnum: import("arktype/internal/methods/string.ts").StringType<"material" | "service" | "equipment" | "maintenance" | "office_supplies", {}>;
export declare const quotationStatusEnum: import("arktype/internal/methods/string.ts").StringType<"expired" | "under_review" | "rejected" | "received" | "requested" | "accepted", {}>;
export declare const quotationTypeEnum: import("arktype/internal/methods/string.ts").StringType<"rfq" | "informal" | "formal" | "tender", {}>;
export declare const goodsReceiptStatusEnum: import("arktype/internal/methods/string.ts").StringType<"draft" | "rejected" | "accepted" | "pending_inspection" | "inspected" | "partially_accepted" | "posted", {}>;
export declare const goodsReceiptTypeEnum: import("arktype/internal/methods/string.ts").StringType<"return" | "standard" | "sample" | "consignment", {}>;
export declare const inspectionResultEnum: import("arktype/internal/methods/string.ts").StringType<"pending" | "passed" | "failed" | "conditional_pass", {}>;
export declare const paymentTermsEnum: import("arktype/internal/methods/string.ts").StringType<"custom" | "net_30" | "net_60" | "net_90" | "cod" | "prepaid" | "due_on_receipt", {}>;
export declare const deliveryTermsEnum: import("arktype/internal/methods/string.ts").StringType<"exw" | "fca" | "cpt" | "cip" | "dap" | "dpu" | "ddp" | "fas" | "fob" | "cfr" | "cif", {}>;
export declare const purchaseOrder: import("arktype/internal/methods/object.ts").ObjectType<{
    id: string;
    tenantId: string;
    orderNumber: string;
    supplierId: string;
    supplierName: string;
    orderType: "service" | "standard" | "blanket" | "contract" | "emergency";
    status: "closed" | "draft" | "cancelled" | "approved" | "pending_approval" | "sent" | "acknowledged" | "partially_received" | "received";
    priority: "low" | "high" | "normal" | "urgent";
    orderDate: string;
    paymentTerms: "custom" | "net_30" | "net_60" | "net_90" | "cod" | "prepaid" | "due_on_receipt";
    deliveryTerms: "exw" | "fca" | "cpt" | "cip" | "dap" | "dpu" | "ddp" | "fas" | "fob" | "cfr" | "cif";
    subtotalAmount: number;
    taxAmount: number;
    discountAmount: number;
    shippingAmount: number;
    totalAmount: number;
    insertedAt: string;
    updatedAt: string;
    supplierCode?: string | undefined;
    requisitionId?: string | undefined;
    quotationId?: string | undefined;
    contractId?: string | undefined;
    expectedDeliveryDate?: string | undefined;
    promisedDeliveryDate?: string | undefined;
    actualDeliveryDate?: string | undefined;
    requestedBy?: string | undefined;
    authorizedBy?: string | undefined;
    approvedBy?: string | undefined;
    approvedAt?: string | undefined;
    buyerId?: string | undefined;
    departmentId?: string | undefined;
    projectId?: string | undefined;
    costCenterId?: string | undefined;
    deliveryLocationId?: string | undefined;
    billingLocationId?: string | undefined;
    customPaymentTerms?: string | undefined;
    currency?: string | undefined;
    exchangeRate?: number | undefined;
    notes?: string | undefined;
    terms?: string | undefined;
    internalNotes?: string | undefined;
    trackingNumber?: string | undefined;
    carrier?: string | undefined;
    sentAt?: string | undefined;
    acknowledgedAt?: string | undefined;
    acknowledgmentNotes?: string | undefined;
    revisionNumber?: number | undefined;
    parentOrderId?: string | undefined;
    metadata?: object | undefined;
    deletedAt?: string | undefined;
}, {}>;
export declare const purchaseOrderLineItem: import("arktype/internal/methods/object.ts").ObjectType<{
    id: string;
    tenantId: string;
    purchaseOrderId: string;
    lineNumber: number;
    itemId: string;
    itemName: string;
    quantity: number;
    unitPrice: number;
    lineAmount: number;
    status: "closed" | "cancelled" | "pending" | "acknowledged" | "partially_received" | "received" | "ordered";
    insertedAt: string;
    updatedAt: string;
    itemCode?: string | undefined;
    description?: string | undefined;
    unitOfMeasure?: string | undefined;
    expectedDeliveryDate?: string | undefined;
    promisedDeliveryDate?: string | undefined;
    receivedQuantity?: number | undefined;
    invoicedQuantity?: number | undefined;
    returnedQuantity?: number | undefined;
    taxRate?: number | undefined;
    taxAmount?: number | undefined;
    discountPercent?: number | undefined;
    discountAmount?: number | undefined;
    specifications?: string | undefined;
    manufacturerPartNumber?: string | undefined;
    supplierPartNumber?: string | undefined;
    notes?: string | undefined;
    metadata?: object | undefined;
    deletedAt?: string | undefined;
}, {}>;
export declare const createPurchaseOrderRequest: import("arktype/internal/methods/object.ts").ObjectType<{
    supplierId: string;
    orderType: "service" | "standard" | "blanket" | "contract" | "emergency";
    orderDate: string;
    paymentTerms: "custom" | "net_30" | "net_60" | "net_90" | "cod" | "prepaid" | "due_on_receipt";
    deliveryTerms: "exw" | "fca" | "cpt" | "cip" | "dap" | "dpu" | "ddp" | "fas" | "fob" | "cfr" | "cif";
    lineItems: {
        itemId: string;
        quantity: number;
        unitPrice: number;
        description?: string | undefined;
        expectedDeliveryDate?: string | undefined;
        unitOfMeasure?: string | undefined;
        specifications?: string | undefined;
        notes?: string | undefined;
    }[];
    orderNumber?: string | undefined;
    priority?: "low" | "high" | "normal" | "urgent" | undefined;
    requisitionId?: string | undefined;
    quotationId?: string | undefined;
    expectedDeliveryDate?: string | undefined;
    requestedBy?: string | undefined;
    buyerId?: string | undefined;
    departmentId?: string | undefined;
    projectId?: string | undefined;
    costCenterId?: string | undefined;
    deliveryLocationId?: string | undefined;
    billingLocationId?: string | undefined;
    customPaymentTerms?: string | undefined;
    currency?: string | undefined;
    notes?: string | undefined;
    terms?: string | undefined;
}, {}>;
export declare const updatePurchaseOrderRequest: import("arktype/internal/methods/object.ts").ObjectType<{
    status?: "closed" | "draft" | "cancelled" | "approved" | "pending_approval" | "sent" | "acknowledged" | "partially_received" | "received" | undefined;
    priority?: "low" | "high" | "normal" | "urgent" | undefined;
    expectedDeliveryDate?: string | undefined;
    promisedDeliveryDate?: string | undefined;
    buyerId?: string | undefined;
    departmentId?: string | undefined;
    projectId?: string | undefined;
    deliveryLocationId?: string | undefined;
    billingLocationId?: string | undefined;
    paymentTerms?: "custom" | "net_30" | "net_60" | "net_90" | "cod" | "prepaid" | "due_on_receipt" | undefined;
    customPaymentTerms?: string | undefined;
    deliveryTerms?: "exw" | "fca" | "cpt" | "cip" | "dap" | "dpu" | "ddp" | "fas" | "fob" | "cfr" | "cif" | undefined;
    notes?: string | undefined;
    terms?: string | undefined;
    internalNotes?: string | undefined;
    trackingNumber?: string | undefined;
    carrier?: string | undefined;
}, {}>;
export declare const purchaseRequisition: import("arktype/internal/methods/object.ts").ObjectType<{
    id: string;
    tenantId: string;
    requisitionNumber: string;
    title: string;
    requisitionType: "material" | "service" | "equipment" | "maintenance" | "office_supplies";
    status: "closed" | "draft" | "cancelled" | "submitted" | "approved" | "rejected" | "pending_approval" | "ordered" | "partially_ordered";
    priority: "low" | "high" | "normal" | "urgent";
    requestedBy: string;
    requestedDate: string;
    totalEstimatedAmount: number;
    insertedAt: string;
    updatedAt: string;
    description?: string | undefined;
    departmentId?: string | undefined;
    projectId?: string | undefined;
    costCenterId?: string | undefined;
    budgetId?: string | undefined;
    approvedBy?: string | undefined;
    approvedAt?: string | undefined;
    rejectedBy?: string | undefined;
    rejectedAt?: string | undefined;
    rejectionReason?: string | undefined;
    requiredDate?: string | undefined;
    deliveryLocationId?: string | undefined;
    preferredSupplierId?: string | undefined;
    currency?: string | undefined;
    justification?: string | undefined;
    notes?: string | undefined;
    metadata?: object | undefined;
    deletedAt?: string | undefined;
}, {}>;
export declare const purchaseRequisitionLineItem: import("arktype/internal/methods/object.ts").ObjectType<{
    id: string;
    tenantId: string;
    purchaseRequisitionId: string;
    lineNumber: number;
    itemName: string;
    quantity: number;
    insertedAt: string;
    updatedAt: string;
    itemId?: string | undefined;
    itemCode?: string | undefined;
    description?: string | undefined;
    estimatedUnitPrice?: number | undefined;
    estimatedLineAmount?: number | undefined;
    unitOfMeasure?: string | undefined;
    requiredDate?: string | undefined;
    preferredSupplierId?: string | undefined;
    orderedQuantity?: number | undefined;
    receivedQuantity?: number | undefined;
    specifications?: string | undefined;
    manufacturerPartNumber?: string | undefined;
    notes?: string | undefined;
    metadata?: object | undefined;
    deletedAt?: string | undefined;
}, {}>;
export declare const createPurchaseRequisitionRequest: import("arktype/internal/methods/object.ts").ObjectType<{
    title: string;
    requisitionType: "material" | "service" | "equipment" | "maintenance" | "office_supplies";
    lineItems: {
        itemName: string;
        quantity: number;
        itemId?: string | undefined;
        itemCode?: string | undefined;
        description?: string | undefined;
        estimatedUnitPrice?: number | undefined;
        unitOfMeasure?: string | undefined;
        requiredDate?: string | undefined;
        preferredSupplierId?: string | undefined;
        specifications?: string | undefined;
        notes?: string | undefined;
    }[];
    requisitionNumber?: string | undefined;
    description?: string | undefined;
    priority?: "low" | "high" | "normal" | "urgent" | undefined;
    departmentId?: string | undefined;
    projectId?: string | undefined;
    costCenterId?: string | undefined;
    budgetId?: string | undefined;
    requiredDate?: string | undefined;
    deliveryLocationId?: string | undefined;
    preferredSupplierId?: string | undefined;
    justification?: string | undefined;
    notes?: string | undefined;
}, {}>;
export declare const updatePurchaseRequisitionRequest: import("arktype/internal/methods/object.ts").ObjectType<{
    title?: string | undefined;
    description?: string | undefined;
    status?: "closed" | "draft" | "cancelled" | "submitted" | "approved" | "rejected" | "pending_approval" | "ordered" | "partially_ordered" | undefined;
    priority?: "low" | "high" | "normal" | "urgent" | undefined;
    requiredDate?: string | undefined;
    deliveryLocationId?: string | undefined;
    preferredSupplierId?: string | undefined;
    justification?: string | undefined;
    notes?: string | undefined;
}, {}>;
export declare const supplierQuotation: import("arktype/internal/methods/object.ts").ObjectType<{
    id: string;
    tenantId: string;
    quotationNumber: string;
    supplierId: string;
    supplierName: string;
    quotationType: "rfq" | "informal" | "formal" | "tender";
    status: "expired" | "under_review" | "rejected" | "received" | "requested" | "accepted";
    requestDate: string;
    quotationDate: string;
    paymentTerms: "custom" | "net_30" | "net_60" | "net_90" | "cod" | "prepaid" | "due_on_receipt";
    deliveryTerms: "exw" | "fca" | "cpt" | "cip" | "dap" | "dpu" | "ddp" | "fas" | "fob" | "cfr" | "cif";
    subtotalAmount: number;
    taxAmount: number;
    discountAmount: number;
    shippingAmount: number;
    totalAmount: number;
    insertedAt: string;
    updatedAt: string;
    supplierCode?: string | undefined;
    purchaseRequisitionId?: string | undefined;
    rfqId?: string | undefined;
    responseDate?: string | undefined;
    validUntil?: string | undefined;
    contactPersonId?: string | undefined;
    contactName?: string | undefined;
    contactEmail?: string | undefined;
    contactPhone?: string | undefined;
    customPaymentTerms?: string | undefined;
    currency?: string | undefined;
    exchangeRate?: number | undefined;
    leadTimeDays?: number | undefined;
    warrantyPeriod?: string | undefined;
    notes?: string | undefined;
    terms?: string | undefined;
    attachments?: string[] | undefined;
    evaluationScore?: number | undefined;
    evaluationNotes?: string | undefined;
    selectedAt?: string | undefined;
    rejectedAt?: string | undefined;
    rejectionReason?: string | undefined;
    metadata?: object | undefined;
    deletedAt?: string | undefined;
}, {}>;
export declare const supplierQuotationLineItem: import("arktype/internal/methods/object.ts").ObjectType<{
    id: string;
    tenantId: string;
    supplierQuotationId: string;
    lineNumber: number;
    itemId: string;
    itemName: string;
    quantity: number;
    unitPrice: number;
    lineAmount: number;
    insertedAt: string;
    updatedAt: string;
    requisitionLineItemId?: string | undefined;
    itemCode?: string | undefined;
    description?: string | undefined;
    unitOfMeasure?: string | undefined;
    leadTimeDays?: number | undefined;
    taxRate?: number | undefined;
    taxAmount?: number | undefined;
    discountPercent?: number | undefined;
    discountAmount?: number | undefined;
    manufacturerPartNumber?: string | undefined;
    supplierPartNumber?: string | undefined;
    specifications?: string | undefined;
    warrantyPeriod?: string | undefined;
    notes?: string | undefined;
    metadata?: object | undefined;
    deletedAt?: string | undefined;
}, {}>;
export declare const createSupplierQuotationRequest: import("arktype/internal/methods/object.ts").ObjectType<{
    supplierId: string;
    quotationType: "rfq" | "informal" | "formal" | "tender";
    quotationDate: string;
    paymentTerms: "custom" | "net_30" | "net_60" | "net_90" | "cod" | "prepaid" | "due_on_receipt";
    deliveryTerms: "exw" | "fca" | "cpt" | "cip" | "dap" | "dpu" | "ddp" | "fas" | "fob" | "cfr" | "cif";
    lineItems: {
        itemId: string;
        quantity: number;
        unitPrice: number;
        requisitionLineItemId?: string | undefined;
        description?: string | undefined;
        unitOfMeasure?: string | undefined;
        leadTimeDays?: number | undefined;
        manufacturerPartNumber?: string | undefined;
        supplierPartNumber?: string | undefined;
        specifications?: string | undefined;
        warrantyPeriod?: string | undefined;
        notes?: string | undefined;
    }[];
    quotationNumber?: string | undefined;
    purchaseRequisitionId?: string | undefined;
    rfqId?: string | undefined;
    validUntil?: string | undefined;
    contactPersonId?: string | undefined;
    customPaymentTerms?: string | undefined;
    currency?: string | undefined;
    leadTimeDays?: number | undefined;
    warrantyPeriod?: string | undefined;
    notes?: string | undefined;
    terms?: string | undefined;
}, {}>;
export declare const updateSupplierQuotationRequest: import("arktype/internal/methods/object.ts").ObjectType<{
    status?: "expired" | "under_review" | "rejected" | "received" | "requested" | "accepted" | undefined;
    validUntil?: string | undefined;
    contactPersonId?: string | undefined;
    paymentTerms?: "custom" | "net_30" | "net_60" | "net_90" | "cod" | "prepaid" | "due_on_receipt" | undefined;
    customPaymentTerms?: string | undefined;
    deliveryTerms?: "exw" | "fca" | "cpt" | "cip" | "dap" | "dpu" | "ddp" | "fas" | "fob" | "cfr" | "cif" | undefined;
    leadTimeDays?: number | undefined;
    warrantyPeriod?: string | undefined;
    notes?: string | undefined;
    terms?: string | undefined;
    evaluationScore?: number | undefined;
    evaluationNotes?: string | undefined;
    rejectionReason?: string | undefined;
}, {}>;
export declare const goodsReceipt: import("arktype/internal/methods/object.ts").ObjectType<{
    id: string;
    tenantId: string;
    receiptNumber: string;
    purchaseOrderId: string;
    supplierId: string;
    supplierName: string;
    receiptType: "return" | "standard" | "sample" | "consignment";
    status: "draft" | "rejected" | "accepted" | "pending_inspection" | "inspected" | "partially_accepted" | "posted";
    receiptDate: string;
    inspectionResult: "pending" | "passed" | "failed" | "conditional_pass";
    insertedAt: string;
    updatedAt: string;
    supplierCode?: string | undefined;
    expectedDate?: string | undefined;
    deliveryDate?: string | undefined;
    locationId?: string | undefined;
    warehouseId?: string | undefined;
    receivedBy?: string | undefined;
    inspectedBy?: string | undefined;
    inspectedAt?: string | undefined;
    qualityNotes?: string | undefined;
    documentNumber?: string | undefined;
    deliveryNote?: string | undefined;
    packingSlipNumber?: string | undefined;
    carrier?: string | undefined;
    trackingNumber?: string | undefined;
    vehicleNumber?: string | undefined;
    driverName?: string | undefined;
    notes?: string | undefined;
    attachments?: string[] | undefined;
    postedAt?: string | undefined;
    postedBy?: string | undefined;
    metadata?: object | undefined;
    deletedAt?: string | undefined;
}, {}>;
export declare const goodsReceiptLineItem: import("arktype/internal/methods/object.ts").ObjectType<{
    id: string;
    tenantId: string;
    goodsReceiptId: string;
    purchaseOrderLineItemId: string;
    lineNumber: number;
    itemId: string;
    itemName: string;
    orderedQuantity: number;
    receivedQuantity: number;
    acceptedQuantity: number;
    rejectedQuantity: number;
    inspectionResult: "pending" | "passed" | "failed" | "conditional_pass";
    insertedAt: string;
    updatedAt: string;
    itemCode?: string | undefined;
    unitOfMeasure?: string | undefined;
    unitPrice?: number | undefined;
    totalValue?: number | undefined;
    lotNumber?: string | undefined;
    serialNumbers?: string[] | undefined;
    expirationDate?: string | undefined;
    manufacturingDate?: string | undefined;
    batchNumber?: string | undefined;
    locationId?: string | undefined;
    binLocation?: string | undefined;
    qualityNotes?: string | undefined;
    damageDescription?: string | undefined;
    rejectionReason?: string | undefined;
    notes?: string | undefined;
    metadata?: object | undefined;
    deletedAt?: string | undefined;
}, {}>;
export declare const createGoodsReceiptRequest: import("arktype/internal/methods/object.ts").ObjectType<{
    purchaseOrderId: string;
    receiptType: "return" | "standard" | "sample" | "consignment";
    receiptDate: string;
    lineItems: {
        purchaseOrderLineItemId: string;
        receivedQuantity: number;
        acceptedQuantity?: number | undefined;
        rejectedQuantity?: number | undefined;
        lotNumber?: string | undefined;
        serialNumbers?: string[] | undefined;
        expirationDate?: string | undefined;
        manufacturingDate?: string | undefined;
        batchNumber?: string | undefined;
        locationId?: string | undefined;
        binLocation?: string | undefined;
        inspectionResult?: "pending" | "passed" | "failed" | "conditional_pass" | undefined;
        qualityNotes?: string | undefined;
        damageDescription?: string | undefined;
        rejectionReason?: string | undefined;
        notes?: string | undefined;
    }[];
    receiptNumber?: string | undefined;
    locationId?: string | undefined;
    warehouseId?: string | undefined;
    documentNumber?: string | undefined;
    deliveryNote?: string | undefined;
    packingSlipNumber?: string | undefined;
    carrier?: string | undefined;
    trackingNumber?: string | undefined;
    vehicleNumber?: string | undefined;
    driverName?: string | undefined;
    notes?: string | undefined;
}, {}>;
export declare const updateGoodsReceiptRequest: import("arktype/internal/methods/object.ts").ObjectType<{
    status?: "draft" | "rejected" | "accepted" | "pending_inspection" | "inspected" | "partially_accepted" | "posted" | undefined;
    inspectedBy?: string | undefined;
    inspectionResult?: "pending" | "passed" | "failed" | "conditional_pass" | undefined;
    qualityNotes?: string | undefined;
    notes?: string | undefined;
}, {}>;
export declare const requestForQuotation: import("arktype/internal/methods/object.ts").ObjectType<{
    id: string;
    tenantId: string;
    rfqNumber: string;
    title: string;
    rfqType: "rfq" | "informal" | "formal" | "tender";
    status: "draft" | "cancelled" | "sent" | "responses_received" | "evaluated" | "awarded";
    issueDate: string;
    paymentTerms: "custom" | "net_30" | "net_60" | "net_90" | "cod" | "prepaid" | "due_on_receipt";
    deliveryTerms: "exw" | "fca" | "cpt" | "cip" | "dap" | "dpu" | "ddp" | "fas" | "fob" | "cfr" | "cif";
    insertedAt: string;
    updatedAt: string;
    description?: string | undefined;
    purchaseRequisitionId?: string | undefined;
    categoryId?: string | undefined;
    projectId?: string | undefined;
    costCenterId?: string | undefined;
    buyerId?: string | undefined;
    responseDeadline?: string | undefined;
    validUntil?: string | undefined;
    currency?: string | undefined;
    customPaymentTerms?: string | undefined;
    deliveryLocationId?: string | undefined;
    evaluationCriteria?: string | undefined;
    terms?: string | undefined;
    instructions?: string | undefined;
    attachments?: string[] | undefined;
    notes?: string | undefined;
    metadata?: object | undefined;
    deletedAt?: string | undefined;
}, {}>;
export declare const rfqLineItem: import("arktype/internal/methods/object.ts").ObjectType<{
    id: string;
    tenantId: string;
    requestForQuotationId: string;
    lineNumber: number;
    itemName: string;
    quantity: number;
    insertedAt: string;
    updatedAt: string;
    itemId?: string | undefined;
    itemCode?: string | undefined;
    description?: string | undefined;
    unitOfMeasure?: string | undefined;
    requiredDate?: string | undefined;
    specifications?: string | undefined;
    manufacturerPartNumber?: string | undefined;
    notes?: string | undefined;
    metadata?: object | undefined;
    deletedAt?: string | undefined;
}, {}>;
export declare const rfqSupplier: import("arktype/internal/methods/object.ts").ObjectType<{
    id: string;
    tenantId: string;
    requestForQuotationId: string;
    supplierId: string;
    supplierName: string;
    sentAt: string;
    insertedAt: string;
    updatedAt: string;
    contactPersonId?: string | undefined;
    contactEmail?: string | undefined;
    responseDeadline?: string | undefined;
    respondedAt?: string | undefined;
    quotationId?: string | undefined;
    notes?: string | undefined;
    deletedAt?: string | undefined;
}, {}>;
export declare const purchaseOrderFilters: import("arktype/internal/methods/object.ts").ObjectType<{
    supplierId?: string | undefined;
    status?: "closed" | "draft" | "cancelled" | "approved" | "pending_approval" | "sent" | "acknowledged" | "partially_received" | "received" | undefined;
    orderType?: "service" | "standard" | "blanket" | "contract" | "emergency" | undefined;
    priority?: "low" | "high" | "normal" | "urgent" | undefined;
    buyerId?: string | undefined;
    departmentId?: string | undefined;
    projectId?: string | undefined;
    dateFrom?: string | undefined;
    dateTo?: string | undefined;
    expectedDeliveryFrom?: string | undefined;
    expectedDeliveryTo?: string | undefined;
    amountFrom?: number | undefined;
    amountTo?: number | undefined;
    search?: string | undefined;
    page?: number | undefined;
    limit?: number | undefined;
    orderBy?: string | undefined;
    orderDirection?: "asc" | "desc" | undefined;
}, {}>;
export declare const purchaseRequisitionFilters: import("arktype/internal/methods/object.ts").ObjectType<{
    status?: "closed" | "draft" | "cancelled" | "submitted" | "approved" | "rejected" | "pending_approval" | "ordered" | "partially_ordered" | undefined;
    requisitionType?: "material" | "service" | "equipment" | "maintenance" | "office_supplies" | undefined;
    priority?: "low" | "high" | "normal" | "urgent" | undefined;
    requestedBy?: string | undefined;
    departmentId?: string | undefined;
    projectId?: string | undefined;
    dateFrom?: string | undefined;
    dateTo?: string | undefined;
    requiredDateFrom?: string | undefined;
    requiredDateTo?: string | undefined;
    search?: string | undefined;
    page?: number | undefined;
    limit?: number | undefined;
    orderBy?: string | undefined;
    orderDirection?: "asc" | "desc" | undefined;
}, {}>;
export declare const supplierQuotationFilters: import("arktype/internal/methods/object.ts").ObjectType<{
    supplierId?: string | undefined;
    status?: "expired" | "under_review" | "rejected" | "received" | "requested" | "accepted" | undefined;
    quotationType?: "rfq" | "informal" | "formal" | "tender" | undefined;
    purchaseRequisitionId?: string | undefined;
    dateFrom?: string | undefined;
    dateTo?: string | undefined;
    validUntilFrom?: string | undefined;
    validUntilTo?: string | undefined;
    amountFrom?: number | undefined;
    amountTo?: number | undefined;
    search?: string | undefined;
    page?: number | undefined;
    limit?: number | undefined;
    orderBy?: string | undefined;
    orderDirection?: "asc" | "desc" | undefined;
}, {}>;
export declare const goodsReceiptFilters: import("arktype/internal/methods/object.ts").ObjectType<{
    purchaseOrderId?: string | undefined;
    supplierId?: string | undefined;
    status?: "draft" | "rejected" | "accepted" | "pending_inspection" | "inspected" | "partially_accepted" | "posted" | undefined;
    receiptType?: "return" | "standard" | "sample" | "consignment" | undefined;
    inspectionResult?: "pending" | "passed" | "failed" | "conditional_pass" | undefined;
    dateFrom?: string | undefined;
    dateTo?: string | undefined;
    locationId?: string | undefined;
    search?: string | undefined;
    page?: number | undefined;
    limit?: number | undefined;
    orderBy?: string | undefined;
    orderDirection?: "asc" | "desc" | undefined;
}, {}>;
export type PurchaseOrder = typeof purchaseOrder.infer;
export type PurchaseOrderLineItem = typeof purchaseOrderLineItem.infer;
export type CreatePurchaseOrderRequest = typeof createPurchaseOrderRequest.infer;
export type UpdatePurchaseOrderRequest = typeof updatePurchaseOrderRequest.infer;
export type PurchaseRequisition = typeof purchaseRequisition.infer;
export type PurchaseRequisitionLineItem = typeof purchaseRequisitionLineItem.infer;
export type CreatePurchaseRequisitionRequest = typeof createPurchaseRequisitionRequest.infer;
export type UpdatePurchaseRequisitionRequest = typeof updatePurchaseRequisitionRequest.infer;
export type SupplierQuotation = typeof supplierQuotation.infer;
export type SupplierQuotationLineItem = typeof supplierQuotationLineItem.infer;
export type CreateSupplierQuotationRequest = typeof createSupplierQuotationRequest.infer;
export type UpdateSupplierQuotationRequest = typeof updateSupplierQuotationRequest.infer;
export type GoodsReceipt = typeof goodsReceipt.infer;
export type GoodsReceiptLineItem = typeof goodsReceiptLineItem.infer;
export type CreateGoodsReceiptRequest = typeof createGoodsReceiptRequest.infer;
export type UpdateGoodsReceiptRequest = typeof updateGoodsReceiptRequest.infer;
export type RequestForQuotation = typeof requestForQuotation.infer;
export type RfqLineItem = typeof rfqLineItem.infer;
export type RfqSupplier = typeof rfqSupplier.infer;
export type PurchaseOrderFilters = typeof purchaseOrderFilters.infer;
export type PurchaseRequisitionFilters = typeof purchaseRequisitionFilters.infer;
export type SupplierQuotationFilters = typeof supplierQuotationFilters.infer;
export type GoodsReceiptFilters = typeof goodsReceiptFilters.infer;
export type PurchaseOrderStatus = typeof purchaseOrderStatusEnum.infer;
export type PurchaseOrderPriority = typeof purchaseOrderPriorityEnum.infer;
export type PurchaseOrderType = typeof purchaseOrderTypeEnum.infer;
export type PurchaseLineItemStatus = typeof purchaseLineItemStatusEnum.infer;
export type PurchaseRequisitionStatus = typeof purchaseRequisitionStatusEnum.infer;
export type PurchaseRequisitionPriority = typeof purchaseRequisitionPriorityEnum.infer;
export type PurchaseRequisitionType = typeof purchaseRequisitionTypeEnum.infer;
export type QuotationStatus = typeof quotationStatusEnum.infer;
export type QuotationType = typeof quotationTypeEnum.infer;
export type GoodsReceiptStatus = typeof goodsReceiptStatusEnum.infer;
export type GoodsReceiptType = typeof goodsReceiptTypeEnum.infer;
export type InspectionResult = typeof inspectionResultEnum.infer;
export type PaymentTerms = typeof paymentTermsEnum.infer;
export type DeliveryTerms = typeof deliveryTermsEnum.infer;
//# sourceMappingURL=purchase.d.ts.map